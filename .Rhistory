knitr::opts_chunk$set(echo = TRUE, comment = NA, message = FALSE, eval = FALSE,
fig.width = 4.5, fig.height = 3, fig.align = "right")
data_folder = "data"
pwd
load(paste0(data_folder, "/Brands.RData"))
load(paste0(data_folder, "/Stores.RData"))
selected_module = 7012                 # Laundry detergent
laundry_brands = brands[product_module_code == selected_module]
load(paste0(data_folder, "/Brands.RData"))
load(paste0(data_folder, "/Stores.RData"))
selected_module = 7012                 # Laundry detergent
laundry_brands = brands[product_module_code == selected_module]
getwd()
setwd("~/MyCode/MPCS/_BUSN_DataSci/DataSci_Mkt")
getwd()
getwd()
data_folder = "hw2/data"
knitr::opts_chunk$set(echo = TRUE, comment = NA, message = FALSE, eval = FALSE,
fig.width = 4.5, fig.height = 3, fig.align = "right")
selected_module = 7012                 # Laundry detergent
laundry_brands = brands[product_module_code == selected_module]
data_folder
load(paste0(data_folder, "/Brands.RData"))
data_folder = "hw2/data"
getcw()
getwd()
load(paste0(data_folder, "/Brands.RData"))
data_folder = "hw2/data"
load(paste0(data_folder, "/Brands.RData"))
setwd("//Users/nichada/MyCode/MPCS/_BUSN_DataSci/DataSci_Mkt")
setwd("/Users/nichada/MyCode/MPCS/_BUSN_DataSci/DataSci_Mkt")
load(paste0(data_folder, "/Brands.RData"))
data_folder = "/Users/nichada/MyCode/MPCS/_BUSN_DataSci/DataSci_Mkt/hw2/data"
load(paste0(data_folder, "/Brands.RData"))
load(paste0(data_folder, "/Stores.RData"))
load(paste0(data_folder, "/Brands.RData"))
load(paste0(data_folder, "/Stores.RData"))
selected_module = 7012                 # Laundry detergent
laundry_brands = brands[product_module_code == selected_module]
View(brands)
head(brands)
head(brands[product_module_code])
brands[product_module_code == selected_module]
names(brands)
names(brands[product_module_code])
head(brands[product_module_descr])
head(brands)
selected_module = 7012                 # Laundry detergent
str(brands)
laundry_brands = brands[product_module_code == selected_module]
library(bit64)
library(data.table)
library(fixest)
library(knitr)
library(ggplot2)
laundry_brands = brands[product_module_code == selected_module]
selected_module = 7012                 # Laundry detergent
str(brands)
laundry_brands = brands[product_module_code == selected_module]
sorted_brands = laundry_brands[order(-laundry_brands$revenue), ]
top_four_brands = head(sorted_brands, 4)
top_four_brands
View(laundry_brands)
View(brands)
View(brands)
top_four_brands$brand_name = NA
top_four_brands$brand_name[top_four_brands$brand_descr == "TIDE - H-D LIQ"] = "Tide"
top_four_brands$brand_name[top_four_brands$brand_descr == "GAIN - H-D LIQ"] = "Gain"
top_four_brands$brand_name[top_four_brands$brand_descr == "ARM & HAMMER - H-D LIQ"] = "ArmHammer"
top_four_brands$brand_name[top_four_brands$brand_descr == "PUREX - H-D LIQ"] = "Purex"
top_four_brands
top_four_brands$brand_name = NA
top_four_brands$brand_name[top_four_brands$brand_descr == "TIDE - H-D LIQ"] = "Tide"
top_four_brands$brand_name[top_four_brands$brand_descr == "GAIN - H-D LIQ"] = "Gain"
top_four_brands$brand_name[top_four_brands$brand_descr == "ARM & HAMMER - H-D LIQ"] = "ArmHammer"
top_four_brands$brand_name[top_four_brands$brand_descr == "PUREX - H-D LIQ"] = "Purex"
top_four_brands
top_four_brands$brand_name = NA
top_four_brands$brand_name[top_four_brands$brand_descr == "TIDE - H-D LIQ"] = "Tide"
top_four_brands$brand_name[top_four_brands$brand_descr == "GAIN - H-D LIQ"] = "Gain"
top_four_brands$brand_name[top_four_brands$brand_descr == "ARM & HAMMER - H-D LIQ"] = "ArmHammer"
top_four_brands$brand_name[top_four_brands$brand_descr == "PUREX - H-D LIQ"] = "Purex"
top_four_brands
load(paste0(data_folder, "/brand_move_7012.RData"))
setnames(move, old = c("units", "promo_dummy"), new = c("quantity", "promotion"))
move$promotion = as.numeric(move$promotion)
merged_data = merge(move, top_four_brands[,c("brand_code_uc","brand_name")], by = "brand_code_uc")
merged_data
View(move)
load(paste0(data_folder, "/brand_move_7012.RData"))
head(move)
load(paste0(data_folder, "/brand_move_7012.RData"))
setnames(move, old = c("units", "promo_dummy"), new = c("quantity", "promotion"))
move$promotion = as.numeric(move$promotion)
merged_data = merge(move, top_four_brands[,c("brand_code_uc","brand_name")], by = "brand_code_uc")
merged_data
isOutlier <- function(x, threshold_bottom, threshold_top) {
is_outlier = rep(FALSE, times = length(x))
median_x   = median(x, na.rm = TRUE)
is_outlier[x/median_x < threshold_bottom | x/median_x > threshold_top] = TRUE
return(is_outlier)
}
threshold_bottom = 0.35
threshold_top = 2.5
## not sure if needed:
## merged_data_means = merged_data[, lapply(.SD, mean),
##                                 by = .(brand_code_uc, store_code_uc),
##                                 .SDcols = c("price")]
merged_data[,isoutlier:=isOutlier(price,0.35,2.5), by = .(brand_code_uc, store_code_uc)]
table(merged_data$isoutlier)
merged_data_cleaned = merged_data[isoutlier=="FALSE"]
merged_data_cleaned
outlier_counts <- df[outlier == TRUE, .N, by = .(brand, store)]
isOutlier <- function(x, threshold_bottom, threshold_top) {
is_outlier = rep(FALSE, times = length(x))
median_x   = median(x, na.rm = TRUE)
is_outlier[x/median_x < threshold_bottom | x/median_x > threshold_top] = TRUE
return(is_outlier)
}
View(merged_data)
table(merged_data$isoutlier)
outlier_counts <- merged_data[outlier == TRUE, .N, by = .(brand_code_uc, store_code_uc)]
outlier_counts <- merged_data[isoutlier == TRUE, .N, by = .(brand_code_uc, store_code_uc)]
head(outlier_counts)
View(outlier_counts)
dim(outlier_counts)
outlier_counts <- merged_data[isoutlier == TRUE, .N, by = .(brand_code_uc, brand_name, store_code_uc)]
outlier_counts
dim(outlier_counts)
table(merged_data$isoutlier)
threshold_bottom = 0.35
threshold_top = 2.5
## not sure if needed:
## merged_data_means = merged_data[, lapply(.SD, mean),
##                                 by = .(brand_code_uc, store_code_uc),
##                                 .SDcols = c("price")]
merged_data[,isoutlier:=isOutlier(price,0.35,2.5), by = .(brand_code_uc, store_code_uc)]
# tabulate data
outlier_counts <- merged_data[isoutlier == TRUE, .N, by = .(brand_code_uc, brand_name, store_code_uc)]
outlier_counts
threshold_bottom = 0.35
threshold_top = 2.5
## not sure if needed:
## merged_data_means = merged_data[, lapply(.SD, mean),
##                                 by = .(brand_code_uc, store_code_uc),
##                                 .SDcols = c("price")]
merged_data[,isoutlier:=isOutlier(price,0.35,2.5), by = .(brand_code_uc, store_code_uc)]
# tabulate data
outlier_counts <- merged_data[isoutlier == TRUE, .N, by = .(brand_code_uc, brand_name, store_code_uc)]
print(outlier_counts)
print(outlier_counts)
threshold_bottom = 0.35
threshold_top = 2.5
## not sure if needed:
## merged_data_means = merged_data[, lapply(.SD, mean),
##                                 by = .(brand_code_uc, store_code_uc),
##                                 .SDcols = c("price")]
merged_data[,isoutlier:=isOutlier(price,0.35,2.5), by = .(brand_code_uc, store_code_uc)]
# tabulate data
outlier_counts <- merged_data[isoutlier == TRUE, .(outlier_count = .N), by = .(brand_code_uc, brand_name, store_code_uc)]
print(outlier_counts)
merged_data_cleaned = merged_data[isoutlier=="FALSE"]
merged_data_cleaned
wide_data = dcast(merged_data_cleaned,
store_code_uc + week_end ~ brand_name,
value.var = c("price", "quantity", "promotion"))
wide_data
View(merged_data_cleaned)
View(wide_data)
head(stores)
sum(is.na(stores$retailer_code))
dim(stores)
# Merge movement data with store meta data
# Keep only stores with a non-NA retailer code
merged_store_data <- merge(wide_data, stores[!is.na(retailer_code)],
by = "store_code_uc", all.x = TRUE)
# Display the merged data
head(merged_store_data)
sum(is.na(merged_store_data$retailer_code))
View(merged_store_data)
dim(merged_store_data)
# Merge movement data with store meta data
# Keep only stores with a non-NA retailer code
merged_store_data <- merge(wide_data, stores[!is.na(retailer_code)],
by = "store_code_uc", all.x = TRUE)
# Display the merged data
head(merged_store_data)
move[, month_trend := 12*(year - min(year)) + month]
# Merge movement data with store meta data
# Keep only stores with a non-NA retailer code
movement_merged <- merge(wide_data, stores[!is.na(retailer_code)],
by = "store_code_uc", all.x = TRUE)
# Display the merged data
head(movement_merged)
View(movement_merged)
# Ensure the week_end is in Date format if it isn't already
movement_merged[, week_end := as.Date(week_end)]
# Extract year and month from week_end
movement_merged[, year := year(week_end)]
movement_merged[, month := month(week_end)]
movement_merged[, month_trend := 12*(year - min(year)) + month]
# Remove rows with any missing values
movement_merged <- movement_merged[complete.cases(movement_merged)]
# Display the cleaned data
head(movement_merged)
unique(movement_merged)
colSums(is.na(movement_merged)
)
colSums(is.na(merged_store_data))  # Missing values per column
# Remove rows with any missing values
movement_merged <- movement_merged[complete.cases(movement_merged)]
# Display the cleaned data
colSums(is.na(movement_merged))
